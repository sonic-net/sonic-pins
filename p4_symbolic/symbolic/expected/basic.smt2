; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x125 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x125)))
(assert
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let ((?x83 (ite $x71 (_ bv1 9) (ite (and $x42 $x73) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) ?x83)))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (or $x41 (or (or false (= ?x113 (_ bv0 9))) (= ?x113 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let ((?x92 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x42 $x59) 2 (- 1)))))
 (let ((?x102 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x92)))
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x120 (ite ipv4.$valid$ (ite $x60 1 ?x102) (- 1))))
 (let (($x119 (ite ipv4.$valid$ $x42 false)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x77 (ite (and $x42 (and $x69 (not $x59))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) (ite $x71 (_ bv1 9) ?x77))))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (and (and (not $x41) $x119) (= ?x120 (- 1))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x125 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x125)))
(assert
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let ((?x83 (ite $x71 (_ bv1 9) (ite (and $x42 $x73) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) ?x83)))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (or $x41 (or (or false (= ?x113 (_ bv0 9))) (= ?x113 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let ((?x92 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x42 $x59) 2 (- 1)))))
 (let ((?x102 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x92)))
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x120 (ite ipv4.$valid$ (ite $x60 1 ?x102) (- 1))))
 (let (($x119 (ite ipv4.$valid$ $x42 false)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x77 (ite (and $x42 (and $x69 (not $x59))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) (ite $x71 (_ bv1 9) ?x77))))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (let (($x246 (and (not $x41) $x119)))
 (and $x246 (= ?x120 0))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x125 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x125)))
(assert
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let ((?x83 (ite $x71 (_ bv1 9) (ite (and $x42 $x73) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) ?x83)))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (or $x41 (or (or false (= ?x113 (_ bv0 9))) (= ?x113 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let ((?x92 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x42 $x59) 2 (- 1)))))
 (let ((?x102 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x92)))
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x120 (ite ipv4.$valid$ (ite $x60 1 ?x102) (- 1))))
 (let (($x119 (ite ipv4.$valid$ $x42 false)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x77 (ite (and $x42 (and $x69 (not $x59))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) (ite $x71 (_ bv1 9) ?x77))))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (and (and (not $x41) $x119) (= ?x120 1)))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x125 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x125)))
(assert
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let ((?x83 (ite $x71 (_ bv1 9) (ite (and $x42 $x73) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) ?x83)))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (or $x41 (or (or false (= ?x113 (_ bv0 9))) (= ?x113 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let ((?x92 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x42 $x59) 2 (- 1)))))
 (let ((?x102 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x92)))
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x120 (ite ipv4.$valid$ (ite $x60 1 ?x102) (- 1))))
 (let (($x119 (ite ipv4.$valid$ $x42 false)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x77 (ite (and $x42 (and $x69 (not $x59))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) (ite $x71 (_ bv1 9) ?x77))))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (and (and (not $x41) $x119) (= ?x120 2)))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x125 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x125)))
(assert
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let ((?x83 (ite $x71 (_ bv1 9) (ite (and $x42 $x73) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) ?x83)))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (or $x41 (or (or false (= ?x113 (_ bv0 9))) (= ?x113 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x59 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x42 (and true ipv4.$valid$)))
 (let ((?x92 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x42 $x59) 2 (- 1)))))
 (let ((?x102 (ite (and $x42 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x92)))
 (let (($x45 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x46 (and true $x45)))
 (let (($x60 (and $x42 $x46)))
 (let ((?x120 (ite ipv4.$valid$ (ite $x60 1 ?x102) (- 1))))
 (let (($x119 (ite ipv4.$valid$ $x42 false)))
 (let (($x61 (not $x46)))
 (let (($x65 (and $x61 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x77 (ite (and $x42 (and $x69 (not $x59))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x71 (and (and $x42 $x69) $x59)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x67 (and (and $x42 $x65) $x54)))
 (let (($x50 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x63 (and (and $x42 $x61) $x50)))
 (let ((?x113 (ite $x60 (_ bv1 9) (ite $x63 (_ bv0 9) (ite $x67 (_ bv1 9) (ite $x71 (_ bv1 9) ?x77))))))
 (let (($x41 (= ?x113 (_ bv511 9))))
 (and (and (not $x41) $x119) (= ?x120 3)))))))))))))))))))))))
(check-sat)

