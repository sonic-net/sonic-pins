; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x129 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x129)))
(assert
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x77 (and $x73 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let ((?x87 (ite $x75 (_ bv1 9) (ite (and $x46 $x77) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) ?x87)))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (or $x45 (or (or false (= ?x117 (_ bv0 9))) (= ?x117 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let ((?x96 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x46 $x63) 2 (- 1)))))
 (let ((?x106 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x96)))
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x124 (ite ipv4.$valid$ (ite $x64 1 ?x106) (- 1))))
 (let (($x123 (ite ipv4.$valid$ $x46 false)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x81 (ite (and $x46 (and $x73 (not $x63))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) (ite $x75 (_ bv1 9) ?x81))))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (and (and (not $x45) $x123) (= ?x124 (- 1))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x129 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x129)))
(assert
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x77 (and $x73 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let ((?x87 (ite $x75 (_ bv1 9) (ite (and $x46 $x77) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) ?x87)))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (or $x45 (or (or false (= ?x117 (_ bv0 9))) (= ?x117 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let ((?x96 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x46 $x63) 2 (- 1)))))
 (let ((?x106 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x96)))
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x124 (ite ipv4.$valid$ (ite $x64 1 ?x106) (- 1))))
 (let (($x123 (ite ipv4.$valid$ $x46 false)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x81 (ite (and $x46 (and $x73 (not $x63))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) (ite $x75 (_ bv1 9) ?x81))))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (let (($x250 (and (not $x45) $x123)))
 (and $x250 (= ?x124 0))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x129 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x129)))
(assert
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x77 (and $x73 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let ((?x87 (ite $x75 (_ bv1 9) (ite (and $x46 $x77) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) ?x87)))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (or $x45 (or (or false (= ?x117 (_ bv0 9))) (= ?x117 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let ((?x96 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x46 $x63) 2 (- 1)))))
 (let ((?x106 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x96)))
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x124 (ite ipv4.$valid$ (ite $x64 1 ?x106) (- 1))))
 (let (($x123 (ite ipv4.$valid$ $x46 false)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x81 (ite (and $x46 (and $x73 (not $x63))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) (ite $x75 (_ bv1 9) ?x81))))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (and (and (not $x45) $x123) (= ?x124 1)))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x129 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x129)))
(assert
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x77 (and $x73 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let ((?x87 (ite $x75 (_ bv1 9) (ite (and $x46 $x77) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) ?x87)))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (or $x45 (or (or false (= ?x117 (_ bv0 9))) (= ?x117 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let ((?x96 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x46 $x63) 2 (- 1)))))
 (let ((?x106 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x96)))
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x124 (ite ipv4.$valid$ (ite $x64 1 ?x106) (- 1))))
 (let (($x123 (ite ipv4.$valid$ $x46 false)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x81 (ite (and $x46 (and $x73 (not $x63))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) (ite $x75 (_ bv1 9) ?x81))))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (and (and (not $x45) $x123) (= ?x124 2)))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x129 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x129)))
(assert
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x77 (and $x73 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let ((?x87 (ite $x75 (_ bv1 9) (ite (and $x46 $x77) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) ?x87)))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (or $x45 (or (or false (= ?x117 (_ bv0 9))) (= ?x117 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x63 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x46 (and true ipv4.$valid$)))
 (let ((?x96 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x46 $x63) 2 (- 1)))))
 (let ((?x106 (ite (and $x46 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x96)))
 (let (($x49 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x50 (and true $x49)))
 (let (($x64 (and $x46 $x50)))
 (let ((?x124 (ite ipv4.$valid$ (ite $x64 1 ?x106) (- 1))))
 (let (($x123 (ite ipv4.$valid$ $x46 false)))
 (let (($x65 (not $x50)))
 (let (($x69 (and $x65 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x73 (and $x69 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let ((?x81 (ite (and $x46 (and $x73 (not $x63))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x75 (and (and $x46 $x73) $x63)))
 (let (($x58 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x71 (and (and $x46 $x69) $x58)))
 (let (($x54 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x67 (and (and $x46 $x65) $x54)))
 (let ((?x117 (ite $x64 (_ bv1 9) (ite $x67 (_ bv0 9) (ite $x71 (_ bv1 9) (ite $x75 (_ bv1 9) ?x81))))))
 (let (($x45 (= ?x117 (_ bv511 9))))
 (and (and (not $x45) $x123) (= ?x124 3)))))))))))))))))))))))
(check-sat)

