; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x72 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x72))))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let ((?x44 (ite (and $x33 (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x41 (and $x33 $x40)))
 (let (($x34 (and true (not $x31))))
 (let (($x56 (and $x34 (not (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))))
 (let (($x53 (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite $x56 (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (or $x65 (or (or false (= ?x59 (_ bv0 9))) (= ?x59 (_ bv1 9)))))))))))))))))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x61 (ite $x31 $x33 false)))
 (let ((?x44 (ite (and $x33 (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x41 (and $x33 $x40)))
 (let (($x34 (and true (not $x31))))
 (let (($x56 (and $x34 (not (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))))
 (let (($x53 (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite $x56 (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (and (and (not $x65) $x61) (= (- 1) (- 1)))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x72 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x72))))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let ((?x44 (ite (and $x33 (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x41 (and $x33 $x40)))
 (let (($x34 (and true (not $x31))))
 (let (($x56 (and $x34 (not (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))))
 (let (($x53 (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite $x56 (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (or $x65 (or (or false (= ?x59 (_ bv0 9))) (= ?x59 (_ bv1 9)))))))))))))))))
(assert
 (let (($x34 (and true (not (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))))
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x64 (ite $x31 false $x34)))
 (let (($x33 (and true $x31)))
 (let ((?x44 (ite (and $x33 (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x41 (and $x33 $x40)))
 (let (($x56 (and $x34 (not (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))))
 (let (($x53 (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite $x56 (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (and (and (not $x65) $x64) (= (- 1) (- 1)))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x72 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x72))))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let ((?x44 (ite (and $x33 (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x41 (and $x33 $x40)))
 (let (($x34 (and true (not $x31))))
 (let (($x56 (and $x34 (not (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))))
 (let (($x53 (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite $x56 (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (or $x65 (or (or false (= ?x59 (_ bv0 9))) (= ?x59 (_ bv1 9)))))))))))))))))
(assert
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x41 (and $x33 $x40)))
 (let ((?x50 (ite $x41 (_ bv2 48) ethernet.dst_addr)))
 (let (($x53 (and true (= ?x50 (_ bv1 48)))))
 (let (($x34 (and true (not $x31))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x63 (ite $x31 (ite $x41 0 (- 1)) (ite $x54 0 (- 1)))))
 (let (($x62 (ite $x31 $x33 $x34)))
 (let ((?x44 (ite (and $x33 (not $x40)) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite (and $x34 (not $x53)) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (and (and (not $x65) $x62) (= ?x63 (- 1))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x72 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x72))))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let ((?x44 (ite (and $x33 (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x41 (and $x33 $x40)))
 (let (($x34 (and true (not $x31))))
 (let (($x56 (and $x34 (not (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))))
 (let (($x53 (and true (= (ite $x41 (_ bv2 48) ethernet.dst_addr) (_ bv1 48)))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite $x56 (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (or $x65 (or (or false (= ?x59 (_ bv0 9))) (= ?x59 (_ bv1 9)))))))))))))))))
(assert
 (let (($x39 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x40 (and true $x39)))
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x41 (and $x33 $x40)))
 (let ((?x50 (ite $x41 (_ bv2 48) ethernet.dst_addr)))
 (let (($x53 (and true (= ?x50 (_ bv1 48)))))
 (let (($x34 (and true (not $x31))))
 (let (($x54 (and $x34 $x53)))
 (let ((?x63 (ite $x31 (ite $x41 0 (- 1)) (ite $x54 0 (- 1)))))
 (let (($x62 (ite $x31 $x33 $x34)))
 (let ((?x44 (ite (and $x33 (not $x40)) (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec))))
 (let ((?x59 (ite $x54 (_ bv1 9) (ite (and $x34 (not $x53)) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x41 (_ bv1 9) ?x44))))))
 (let (($x65 (= ?x59 (_ bv511 9))))
 (let (($x205 (and (not $x65) $x62)))
 (and $x205 (= ?x63 0))))))))))))))))))
(check-sat)

