; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x59 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x59)))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x34 (and true (not $x31))))
 (let ((?x45 (ite (and true (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (or $x52 (or (or false (= ?x50 (_ bv0 9))) (= ?x50 (_ bv1 9))))))))))))))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x34 (and true (not $x31))))
 (let ((?x45 (ite (and true (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (and (and (not $x52) $x33) (= (- 1) (- 1)))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x59 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x59)))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x34 (and true (not $x31))))
 (let ((?x45 (ite (and true (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (or $x52 (or (or false (= ?x50 (_ bv0 9))) (= ?x50 (_ bv1 9))))))))))))))
(assert
 (let (($x34 (and true (not (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))))
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let ((?x45 (ite (and true (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (and (and (not $x52) $x34) (= (- 1) (- 1)))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x59 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x59)))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x34 (and true (not $x31))))
 (let ((?x45 (ite (and true (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (or $x52 (or (or false (= ?x50 (_ bv0 9))) (= ?x50 (_ bv1 9))))))))))))))
(assert
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x47 (ite $x42 0 (- 1))))
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x34 (and true (not $x31))))
 (let ((?x45 (ite (and true (not $x41)) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (and (and (not $x52) true) (= ?x47 (- 1))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.dst_addr () (_ BitVec 48))
(assert
 (let (($x59 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x59)))
(assert
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x34 (and true (not $x31))))
 (let ((?x45 (ite (and true (not (and true (= ethernet.dst_addr (_ bv1 48))))) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (or $x52 (or (or false (= ?x50 (_ bv0 9))) (= ?x50 (_ bv1 9))))))))))))))
(assert
 (let (($x40 (= ethernet.dst_addr (_ bv1 48))))
 (let (($x41 (and true $x40)))
 (let (($x42 (and true $x41)))
 (let ((?x47 (ite $x42 0 (- 1))))
 (let (($x31 (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1)))))
 (let (($x33 (and true $x31)))
 (let (($x34 (and true (not $x31))))
 (let ((?x45 (ite (and true (not $x41)) (_ bv511 9) (ite $x34 (_ bv511 9) (ite $x33 (_ bv511 9) standard_metadata.egress_spec)))))
 (let ((?x50 (ite $x42 (_ bv1 9) ?x45)))
 (let (($x52 (= ?x50 (_ bv511 9))))
 (let (($x147 (and (not $x52) true)))
 (and $x147 (= ?x47 0))))))))))))))
(check-sat)

