; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x95 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x90 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x85 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x80 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x75 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x71 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x67 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x72 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x67) $x71)))
 (or (or (or (or (or $x72 $x75) $x80) $x85) $x90) $x95))))))))))
(assert
 (let ((?x39 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x57 (ite $x51 (_ bv3 9) (ite $x34 (_ bv2 9) ?x39))))
 (let (($x78 (or (or (or (or false (= ?x57 (_ bv0 9))) (= ?x57 (_ bv1 9))) (= ?x57 (_ bv2 9))) (= ?x57 (_ bv3 9)))))
 (let (($x98 (or (or (or (or $x78 (= ?x57 (_ bv4 9))) (= ?x57 (_ bv5 9))) (= ?x57 (_ bv6 9))) (= ?x57 (_ bv7 9)))))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (or $x59 $x98))))))))))))))
(assert
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let ((?x44 (ite $x34 (_ bv2 9) (ite (and true (not $x33)) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x57 (ite $x51 (_ bv3 9) ?x44)))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (and (and (not $x59) true) (= ?x41 (- 1))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x95 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x90 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x85 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x80 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x75 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x71 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x67 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x72 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x67) $x71)))
 (or (or (or (or (or $x72 $x75) $x80) $x85) $x90) $x95))))))))))
(assert
 (let ((?x39 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x57 (ite $x51 (_ bv3 9) (ite $x34 (_ bv2 9) ?x39))))
 (let (($x78 (or (or (or (or false (= ?x57 (_ bv0 9))) (= ?x57 (_ bv1 9))) (= ?x57 (_ bv2 9))) (= ?x57 (_ bv3 9)))))
 (let (($x98 (or (or (or (or $x78 (= ?x57 (_ bv4 9))) (= ?x57 (_ bv5 9))) (= ?x57 (_ bv6 9))) (= ?x57 (_ bv7 9)))))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (or $x59 $x98))))))))))))))
(assert
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let ((?x44 (ite $x34 (_ bv2 9) (ite (and true (not $x33)) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x57 (ite $x51 (_ bv3 9) ?x44)))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (let (($x211 (and (not $x59) true)))
 (and $x211 (= ?x41 0))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x95 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x90 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x85 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x80 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x75 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x71 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x67 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x72 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x67) $x71)))
 (or (or (or (or (or $x72 $x75) $x80) $x85) $x90) $x95))))))))))
(assert
 (let ((?x39 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x57 (ite $x51 (_ bv3 9) (ite $x34 (_ bv2 9) ?x39))))
 (let (($x78 (or (or (or (or false (= ?x57 (_ bv0 9))) (= ?x57 (_ bv1 9))) (= ?x57 (_ bv2 9))) (= ?x57 (_ bv3 9)))))
 (let (($x98 (or (or (or (or $x78 (= ?x57 (_ bv4 9))) (= ?x57 (_ bv5 9))) (= ?x57 (_ bv6 9))) (= ?x57 (_ bv7 9)))))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (or $x59 $x98))))))))))))))
(assert
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x53 (ite $x46 (ite $x51 0 (- 1)) (- 1))))
 (let (($x52 (ite $x46 $x47 false)))
 (let ((?x44 (ite $x34 (_ bv2 9) (ite (and true (not $x33)) (_ bv511 9) standard_metadata.egress_spec))))
 (let ((?x57 (ite $x51 (_ bv3 9) ?x44)))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (and (and (not $x59) $x52) (= ?x53 (- 1))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x95 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x90 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x85 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x80 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x75 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x71 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x67 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x72 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x67) $x71)))
 (or (or (or (or (or $x72 $x75) $x80) $x85) $x90) $x95))))))))))
(assert
 (let ((?x39 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x57 (ite $x51 (_ bv3 9) (ite $x34 (_ bv2 9) ?x39))))
 (let (($x78 (or (or (or (or false (= ?x57 (_ bv0 9))) (= ?x57 (_ bv1 9))) (= ?x57 (_ bv2 9))) (= ?x57 (_ bv3 9)))))
 (let (($x98 (or (or (or (or $x78 (= ?x57 (_ bv4 9))) (= ?x57 (_ bv5 9))) (= ?x57 (_ bv6 9))) (= ?x57 (_ bv7 9)))))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (or $x59 $x98))))))))))))))
(assert
 (let (($x32 (= ethernet.ether_type (_ bv16 16))))
 (let (($x33 (and true $x32)))
 (let (($x34 (and true $x33)))
 (let ((?x41 (ite $x34 0 (- 1))))
 (let (($x46 (and (distinct ?x41 (- 1)) true)))
 (let (($x47 (and true $x46)))
 (let (($x51 (and $x47 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x53 (ite $x46 (ite $x51 0 (- 1)) (- 1))))
 (let (($x52 (ite $x46 $x47 false)))
 (let ((?x44 (ite $x34 (_ bv2 9) (ite (and true (not $x33)) (_ bv511 9) standard_metadata.egress_spec))))
 (let ((?x57 (ite $x51 (_ bv3 9) ?x44)))
 (let (($x59 (= ?x57 (_ bv511 9))))
 (and (and (not $x59) $x52) (= ?x53 0)))))))))))))))
(check-sat)

