; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x92 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x87 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x82 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x77 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x72 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x68 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x64 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x69 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x64) $x68)))
 (or (or (or (or (or $x69 $x72) $x77) $x82) $x87) $x92))))))))))
(assert
 (let ((?x36 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x54 (ite $x48 (_ bv3 9) (ite $x31 (_ bv2 9) ?x36))))
 (let (($x75 (or (or (or (or false (= ?x54 (_ bv0 9))) (= ?x54 (_ bv1 9))) (= ?x54 (_ bv2 9))) (= ?x54 (_ bv3 9)))))
 (let (($x95 (or (or (or (or $x75 (= ?x54 (_ bv4 9))) (= ?x54 (_ bv5 9))) (= ?x54 (_ bv6 9))) (= ?x54 (_ bv7 9)))))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (or $x56 $x95))))))))))))))
(assert
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let ((?x41 (ite $x31 (_ bv2 9) (ite (and true (not $x30)) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x54 (ite $x48 (_ bv3 9) ?x41)))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (and (and (not $x56) true) (= ?x38 (- 1))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x92 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x87 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x82 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x77 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x72 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x68 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x64 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x69 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x64) $x68)))
 (or (or (or (or (or $x69 $x72) $x77) $x82) $x87) $x92))))))))))
(assert
 (let ((?x36 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x54 (ite $x48 (_ bv3 9) (ite $x31 (_ bv2 9) ?x36))))
 (let (($x75 (or (or (or (or false (= ?x54 (_ bv0 9))) (= ?x54 (_ bv1 9))) (= ?x54 (_ bv2 9))) (= ?x54 (_ bv3 9)))))
 (let (($x95 (or (or (or (or $x75 (= ?x54 (_ bv4 9))) (= ?x54 (_ bv5 9))) (= ?x54 (_ bv6 9))) (= ?x54 (_ bv7 9)))))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (or $x56 $x95))))))))))))))
(assert
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let ((?x41 (ite $x31 (_ bv2 9) (ite (and true (not $x30)) (_ bv511 9) standard_metadata.egress_spec))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x54 (ite $x48 (_ bv3 9) ?x41)))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (let (($x208 (and (not $x56) true)))
 (and $x208 (= ?x38 0))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x92 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x87 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x82 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x77 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x72 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x68 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x64 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x69 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x64) $x68)))
 (or (or (or (or (or $x69 $x72) $x77) $x82) $x87) $x92))))))))))
(assert
 (let ((?x36 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x54 (ite $x48 (_ bv3 9) (ite $x31 (_ bv2 9) ?x36))))
 (let (($x75 (or (or (or (or false (= ?x54 (_ bv0 9))) (= ?x54 (_ bv1 9))) (= ?x54 (_ bv2 9))) (= ?x54 (_ bv3 9)))))
 (let (($x95 (or (or (or (or $x75 (= ?x54 (_ bv4 9))) (= ?x54 (_ bv5 9))) (= ?x54 (_ bv6 9))) (= ?x54 (_ bv7 9)))))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (or $x56 $x95))))))))))))))
(assert
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x50 (ite $x43 (ite $x48 0 (- 1)) (- 1))))
 (let (($x49 (ite $x43 $x44 false)))
 (let ((?x41 (ite $x31 (_ bv2 9) (ite (and true (not $x30)) (_ bv511 9) standard_metadata.egress_spec))))
 (let ((?x54 (ite $x48 (_ bv3 9) ?x41)))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (and (and (not $x56) $x49) (= ?x50 (- 1))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ethernet.ether_type () (_ BitVec 16))
(declare-fun ethernet.src_addr () (_ BitVec 48))
(assert
 (let (($x92 (= standard_metadata.ingress_port (_ bv7 9))))
 (let (($x87 (= standard_metadata.ingress_port (_ bv6 9))))
 (let (($x82 (= standard_metadata.ingress_port (_ bv5 9))))
 (let (($x77 (= standard_metadata.ingress_port (_ bv4 9))))
 (let (($x72 (= standard_metadata.ingress_port (_ bv3 9))))
 (let (($x68 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x64 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x69 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x64) $x68)))
 (or (or (or (or (or $x69 $x72) $x77) $x82) $x87) $x92))))))))))
(assert
 (let ((?x36 (ite (and true (not (and true (= ethernet.ether_type (_ bv16 16))))) (_ bv511 9) standard_metadata.egress_spec)))
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x54 (ite $x48 (_ bv3 9) (ite $x31 (_ bv2 9) ?x36))))
 (let (($x75 (or (or (or (or false (= ?x54 (_ bv0 9))) (= ?x54 (_ bv1 9))) (= ?x54 (_ bv2 9))) (= ?x54 (_ bv3 9)))))
 (let (($x95 (or (or (or (or $x75 (= ?x54 (_ bv4 9))) (= ?x54 (_ bv5 9))) (= ?x54 (_ bv6 9))) (= ?x54 (_ bv7 9)))))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (or $x56 $x95))))))))))))))
(assert
 (let (($x29 (= ethernet.ether_type (_ bv16 16))))
 (let (($x30 (and true $x29)))
 (let (($x31 (and true $x30)))
 (let ((?x38 (ite $x31 0 (- 1))))
 (let (($x43 (and (distinct ?x38 (- 1)) true)))
 (let (($x44 (and true $x43)))
 (let (($x48 (and $x44 (and true (= ethernet.src_addr (_ bv256 48))))))
 (let ((?x50 (ite $x43 (ite $x48 0 (- 1)) (- 1))))
 (let (($x49 (ite $x43 $x44 false)))
 (let ((?x41 (ite $x31 (_ bv2 9) (ite (and true (not $x30)) (_ bv511 9) standard_metadata.egress_spec))))
 (let ((?x54 (ite $x48 (_ bv3 9) ?x41)))
 (let (($x56 (= ?x54 (_ bv511 9))))
 (and (and (not $x56) $x49) (= ?x50 0)))))))))))))))
(check-sat)

