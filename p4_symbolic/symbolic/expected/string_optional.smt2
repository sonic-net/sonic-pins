; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let (($x71 (and true $x70)))
 (let ((?x81 (ite $x71 0 (ite (and true true) 1 (- 1)))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (and (and (not $x51) true) (= ?x81 (- 1)))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let (($x71 (and true $x70)))
 (let ((?x81 (ite $x71 0 (ite (and true true) 1 (- 1)))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (let (($x119 (and (not $x51) true)))
 (and $x119 (= ?x81 0)))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let (($x71 (and true $x70)))
 (let ((?x81 (ite $x71 0 (ite (and true true) 1 (- 1)))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (and (and (not $x51) true) (= ?x81 1))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x55 (ite (and true (and true (= standard_metadata.ingress_port (_ bv2 9)))) 2 (- 1))))
 (let ((?x59 (ite (and true (and true (= standard_metadata.ingress_port (_ bv1 9)))) 1 ?x55)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x42 (and true $x35)))
 (let ((?x64 (ite $x42 0 ?x59)))
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (and (and (not $x51) true) (= ?x64 (- 1)))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x55 (ite (and true (and true (= standard_metadata.ingress_port (_ bv2 9)))) 2 (- 1))))
 (let ((?x59 (ite (and true (and true (= standard_metadata.ingress_port (_ bv1 9)))) 1 ?x55)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x42 (and true $x35)))
 (let ((?x64 (ite $x42 0 ?x59)))
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (let (($x119 (and (not $x51) true)))
 (and $x119 (= ?x64 0)))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x55 (ite (and true (and true (= standard_metadata.ingress_port (_ bv2 9)))) 2 (- 1))))
 (let ((?x59 (ite (and true (and true (= standard_metadata.ingress_port (_ bv1 9)))) 1 ?x55)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x42 (and true $x35)))
 (let ((?x64 (ite $x42 0 ?x59)))
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (and (and (not $x51) true) (= ?x64 1))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x55 (ite (and true (and true (= standard_metadata.ingress_port (_ bv2 9)))) 2 (- 1))))
 (let ((?x59 (ite (and true (and true (= standard_metadata.ingress_port (_ bv1 9)))) 1 ?x55)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x42 (and true $x35)))
 (let ((?x64 (ite $x42 0 ?x59)))
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (and (and (not $x51) true) (= ?x64 2))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.metadata.string_field () (_ BitVec 9))
(assert
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x37) $x40))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (or $x51 (or (or (or false (= ?x82 (_ bv0 9))) (= ?x82 (_ bv1 9))) (= ?x82 (_ bv2 9)))))))))))))))))))))))
(assert
 (let ((?x67 (concat (_ bv0 7) (_ bv2 2))))
 (let ((?x31 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (= standard_metadata.ingress_port (_ bv2 9))))
 (let (($x41 (and true $x40)))
 (let (($x34 (= standard_metadata.ingress_port (_ bv0 9))))
 (let (($x35 (and true $x34)))
 (let (($x43 (not $x35)))
 (let (($x48 (and true (and $x43 (not (and true (= standard_metadata.ingress_port (_ bv1 9))))))))
 (let ((?x56 (ite (and $x48 $x41) ?x31 (ite true ?x31 scalars.metadata.string_field))))
 (let (($x37 (= standard_metadata.ingress_port (_ bv1 9))))
 (let (($x38 (and true $x37)))
 (let (($x42 (and true $x35)))
 (let ((?x68 (ite $x42 ?x67 (ite (and (and true $x43) $x38) (concat (_ bv0 8) (_ bv1 1)) ?x56))))
 (let (($x70 (and true (= ?x68 ?x67))))
 (let ((?x80 (ite (and (and true (not $x70)) true) (_ bv1 9) standard_metadata.egress_spec)))
 (let (($x71 (and true $x70)))
 (let ((?x82 (ite $x71 (_ bv0 9) ?x80)))
 (let (($x51 (= ?x82 (_ bv511 9))))
 (and (and (not $x51) true) (= (- 1) (- 1))))))))))))))))))))))
(check-sat)

