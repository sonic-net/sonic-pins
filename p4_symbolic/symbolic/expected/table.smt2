; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(assert
 (let (($x61 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x61)))
(assert
 (let ((?x34 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x43 (and true (not (and true (= standard_metadata.ingress_port ?x34))))))
 (let ((?x38 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x36 (and true (= standard_metadata.ingress_port ?x34))))
 (let (($x41 (and true $x36)))
 (let ((?x55 (ite $x41 ?x38 (ite (and $x43 $x40) ?x34 standard_metadata.egress_spec))))
 (or (or (= ?x55 (_ bv455 9)) (= ?x55 (_ bv0 9))) (= ?x55 (_ bv1 9)))))))))))
(assert
 (let (($x40 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x36 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1))))))
 (let (($x41 (and true $x36)))
 (let ((?x54 (ite $x41 0 (ite (and true $x40) 1 (- 1)))))
 (let ((?x34 (concat (_ bv0 8) (_ bv0 1))))
 (let ((?x52 (ite (and (and true (not $x36)) $x40) ?x34 standard_metadata.egress_spec)))
 (let ((?x38 (concat (_ bv0 8) (_ bv1 1))))
 (let ((?x55 (ite $x41 ?x38 ?x52)))
 (let (($x46 (= ?x55 (_ bv455 9))))
 (and (and (not $x46) true) (= ?x54 (- 1)))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(assert
 (let (($x61 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x61)))
(assert
 (let ((?x34 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x43 (and true (not (and true (= standard_metadata.ingress_port ?x34))))))
 (let ((?x38 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x36 (and true (= standard_metadata.ingress_port ?x34))))
 (let (($x41 (and true $x36)))
 (let ((?x55 (ite $x41 ?x38 (ite (and $x43 $x40) ?x34 standard_metadata.egress_spec))))
 (or (or (= ?x55 (_ bv455 9)) (= ?x55 (_ bv0 9))) (= ?x55 (_ bv1 9)))))))))))
(assert
 (let (($x40 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x36 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1))))))
 (let (($x41 (and true $x36)))
 (let ((?x54 (ite $x41 0 (ite (and true $x40) 1 (- 1)))))
 (let ((?x34 (concat (_ bv0 8) (_ bv0 1))))
 (let ((?x52 (ite (and (and true (not $x36)) $x40) ?x34 standard_metadata.egress_spec)))
 (let ((?x38 (concat (_ bv0 8) (_ bv1 1))))
 (let ((?x55 (ite $x41 ?x38 ?x52)))
 (let (($x46 (= ?x55 (_ bv455 9))))
 (let (($x113 (and (not $x46) true)))
 (and $x113 (= ?x54 0)))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(assert
 (let (($x61 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x61)))
(assert
 (let ((?x34 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x40 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x43 (and true (not (and true (= standard_metadata.ingress_port ?x34))))))
 (let ((?x38 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x36 (and true (= standard_metadata.ingress_port ?x34))))
 (let (($x41 (and true $x36)))
 (let ((?x55 (ite $x41 ?x38 (ite (and $x43 $x40) ?x34 standard_metadata.egress_spec))))
 (or (or (= ?x55 (_ bv455 9)) (= ?x55 (_ bv0 9))) (= ?x55 (_ bv1 9)))))))))))
(assert
 (let (($x40 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x36 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1))))))
 (let (($x41 (and true $x36)))
 (let ((?x54 (ite $x41 0 (ite (and true $x40) 1 (- 1)))))
 (let ((?x34 (concat (_ bv0 8) (_ bv0 1))))
 (let ((?x52 (ite (and (and true (not $x36)) $x40) ?x34 standard_metadata.egress_spec)))
 (let ((?x38 (concat (_ bv0 8) (_ bv1 1))))
 (let ((?x55 (ite $x41 ?x38 ?x52)))
 (let (($x46 (= ?x55 (_ bv455 9))))
 (and (and (not $x46) true) (= ?x54 1))))))))))))
(check-sat)

