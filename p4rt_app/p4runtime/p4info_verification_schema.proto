// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package p4rt_app;

import "p4_pdpi/ir.proto";

// Schema for verifying a action within a fixed SAI P4 table.
message ActionSchema {
  string name = 1;
  message ParameterSchema {
    string name = 1;
    pdpi.Format format = 2;
    int32 bitwidth = 3;  // Only used for HEX_STRING types.
    bool is_port = 4;
  }
  repeated ParameterSchema parameters = 2;
}

// Schema for verifying a match field within a fixed SAI P4 table.
message MatchSchema {
  string name = 1;
  pdpi.Format format = 2;
  int32 bitwidth = 3;
  bool is_port = 4;

  // Subset of p4.config.v1.MatchField.MatchType.
  enum MatchType {
    UNKNOWN = 0;
    EXACT = 1;
    LPM = 2;
    TERNARY = 3;
  }
  MatchType type = 5;
}

// Schema for verifying a fixed SAI P4 table.
message FixedTableSchema {
  string name = 1;
  repeated MatchSchema match_fields = 2;
  repeated ActionSchema actions = 3;
}

// Schema verifying P4Info. Can be generated from an IrP4Info instance.
message P4InfoVerificationSchema {
  repeated FixedTableSchema tables = 1;
}
