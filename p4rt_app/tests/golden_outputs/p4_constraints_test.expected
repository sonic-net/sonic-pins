=== Test: AclIngressRequiresIPMatchFieldWhenUsingEcnMatchField ===
--- INPUT: WriteRequest ------------------------------------
updates {
  type: INSERT
  entity {
    table_entry {
      table_name: "acl_ingress_table"
      matches {
        name: "dst_mac"
        ternary {
          value {
            mac: "02:02:02:02:02:02"
          }
          mask {
            mac: "ff:ff:ff:ff:ff:ff"
          }
        }
      }
      matches {
        name: "ecn"
        ternary {
          value {
            hex_str: "0x3"
          }
          mask {
            hex_str: "0x3"
          }
        }
      }
      priority: 1
      action {
        name: "acl_copy"
        params {
          name: "qos_queue"
          value {
            str: "2"
          }
        }
      }
    }
  }
}
--- OUTPUT: WriteResponse ----------------------------------
UNKNOWN: Batch failed, individual results:
#1: INVALID_ARGUMENT: All entries must satisfy:

In @entry_restriction of table 'ingress.acl_ingress.acl_ingress_table'; at offset line 10, columns 5 to 65:
   |     dscp::mask != 0 -> (is_ip == 1 || is_ipv4 == 1 || is_ipv6 == 1);
10 |     ecn::mask != 0 -> (is_ip == 1 || is_ipv4 == 1 || is_ipv6 == 1);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

But your entry does not.
>>>Relevant Entry Info<<<
Table Name: "ingress.acl_ingress.acl_ingress_table"
Priority:1
Field: "ecn" -> Value: Ternary{.value = 3, .mask = 3}
Field: "is_ip" -> Value: Ternary{.value = 0, .mask = 0}
Field: "is_ipv4" -> Value: Ternary{.value = 0, .mask = 0}
Field: "is_ipv6" -> Value: Ternary{.value = 0, .mask = 0}


=== Test: AclEgressTableDisallowsIpEtherTypeMatches ===
--- INPUT: WriteRequest ------------------------------------
updates {
  type: INSERT
  entity {
    table_entry {
      table_name: "acl_egress_table"
      matches {
        name: "ether_type"
        ternary {
          value {
            hex_str: "0x0800"
          }
          mask {
            hex_str: "0xffff"
          }
        }
      }
      matches {
        name: "ip_protocol"
        ternary {
          value {
            hex_str: "0x11"
          }
          mask {
            hex_str: "0xff"
          }
        }
      }
      matches {
        name: "l4_dst_port"
        ternary {
          value {
            hex_str: "0x03ea"
          }
          mask {
            hex_str: "0xffff"
          }
        }
      }
      matches {
        name: "out_port"
        optional {
          value {
            str: "518"
          }
        }
      }
      priority: 3100
      action {
        name: "acl_drop"
      }
    }
  }
}
--- OUTPUT: WriteResponse ----------------------------------
UNKNOWN: Batch failed, individual results:
#1: INVALID_ARGUMENT: All entries must satisfy:

In @entry_restriction of table 'egress.acl_egress.acl_egress_table'; at offset line 8, columns 5 to 73:
  |     // Only allow IP field matches for IP packets.
8 |     ip_protocol::mask != 0 -> (is_ip == 1 || is_ipv4 == 1 || is_ipv6 == 1);
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

But your entry does not.
>>>Relevant Entry Info<<<
Table Name: "egress.acl_egress.acl_egress_table"
Priority:3100
Field: "ip_protocol" -> Value: Ternary{.value = 17, .mask = 255}
Field: "is_ip" -> Value: Ternary{.value = 0, .mask = 0}
Field: "is_ipv4" -> Value: Ternary{.value = 0, .mask = 0}
Field: "is_ipv6" -> Value: Ternary{.value = 0, .mask = 0}


=== Test: AclEgressTableDisallowsIpEtherTypeMatches ===
--- INPUT: WriteRequest ------------------------------------
updates {
  type: INSERT
  entity {
    table_entry {
      table_name: "acl_egress_table"
      matches {
        name: "is_ipv4"
        optional {
          value {
            hex_str: "0x1"
          }
        }
      }
      matches {
        name: "ip_protocol"
        ternary {
          value {
            hex_str: "0x11"
          }
          mask {
            hex_str: "0xff"
          }
        }
      }
      matches {
        name: "l4_dst_port"
        ternary {
          value {
            hex_str: "0x03ea"
          }
          mask {
            hex_str: "0xffff"
          }
        }
      }
      matches {
        name: "out_port"
        optional {
          value {
            str: "518"
          }
        }
      }
      priority: 3100
      action {
        name: "acl_drop"
      }
    }
  }
}
--- OUTPUT: WriteResponse ----------------------------------
OK: 
