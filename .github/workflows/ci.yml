name: "build"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Bazel Build and Test
    # We use Ubuntu 20.04 as it comes with GCC v9.3 by default.
    runs-on: ubuntu-20.04
    env:
      BAZEL_CACHE_USER: github
      BAZEL_CACHE_PWD: ${{ secrets.BAZEL_CACHE_PWD }}
      BAZEL_CACHE_URL: pins-bazel-cache.onf.dev:9090

    steps:
    - uses: actions/checkout@v2

    - name: Mount bazel cache
      uses: actions/cache@v2
      with:
        # See https://docs.bazel.build/versions/master/output_directories.html
        path: "/tmp/repo-cache"
        # See https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
        key: bazel-repo-cache-v1-${{ runner.os }}-${{ hashFiles('**/*_deps.bzl', '.bazelrc', '.bazelversion', 'WORKSPACE.bazel') }}
        restore-keys: |
          bazel-repo-cache-v1-${{ runner.os }}-

    - name: Install system dependencies
      run: ./install_dependencies.sh

    - name: Install bazelisk
      run: |
        ARCH=$(dpkg --print-architecture)
        sudo curl -fsSL -o /usr/local/bin/bazel \
          https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-${ARCH}
        sudo chmod +x /usr/local/bin/bazel

    # Authentication is enabled for R/W access for builds on main and branch PRs
    # Unauthenticated reads are allowed for PRs from forks
    - name: Build and Test
      run: |
	grep -r 'butter\|financial\|exchange\|stock\|market\|trading\|GCPTP\|CME\|bubble\|coarse-grained equalization\|CGE\|coarse' *
	if [ $? -eq 0 ]
	then
		echo "Keyword check Failed. Pl. check and fix it"
	else
		echo "Keyword check Passed."
	fi
        mkdir -p /tmp/repo-cache
        BAZEL_OPTS="--repository_cache=/tmp/repo-cache"
        [ ! -z "$BAZEL_CACHE_USER" ] && [ ! -z "$BAZEL_CACHE_PWD" ] && \
          AUTH="${BAZEL_CACHE_USER}:${BAZEL_CACHE_PWD}@"
        BAZEL_OPTS+=" --remote_cache=https://${AUTH}${BAZEL_CACHE_URL}"
        BAZEL_OPTS+=" --remote_download_minimal"
        bazel build ${BAZEL_OPTS} //...
        bazel test ${BAZEL_OPTS} //...
